service: spot-the-difference


plugins:
  - serverless-python-requirements
  - serverless-wsgi
  - serverless-dynamodb-local

custom:
  tableName: 'users-table-${self:provider.stage}'

  wsgi:
    app: app.app
    packRequirements: false

  pythonRequirements:
    dockerizePip: non-linux

  dynamodb:
    stages:
      - dev
    start:
      migrate: true

provider:
  name: aws
  runtime: python3.6
  stage: dev
  region: eu-west-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem

      Resource:
        - { "Fn::GetAtt": ["UsersDynamoDBTable", "Arn" ] }

  environment:
    USERS_TABLE: ${self:custom.tableName}
    REDIRECT_URI: ${file(env.json):REDIRECT_URI}
    CLIENT_ID: ${file(env.json):CLIENT_ID}
    CLIENT_SECRET: ${file(env.json):CLIENT_SECRET}

functions:
  app:
    handler: wsgi_handler.handler
    events:
      - http:
          method: any
          path: /
          cors: true
      - http:
          method: any
          path: /{proxy+}
          cors: true

resources:
  Resources:
    UsersDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: share_code
            AttributeType: S

        KeySchema:
          -
            AttributeName: share_code
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}